[tool.poetry]
name = "aioswitcher"
version = "2.0.11.dev"
description = "Switcher Python Integration."
license = "Apache-2.0"
authors = [ "Tomer Figenblat <tomer.figenblat@gmail.com>" ]
maintainers = [ "Shay Levy" ]
readme = "README.md"
homepage = "https://pypi.org/project/aioswitcher/"
repository = "https://github.com/tomerfi/aioswitcher"
documentation = "https://aioswitcher.tomfi.info"
keywords = [ "home", "automation", "switcher", "smart" ]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Home Automation",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed"
]
include = [ ]
exclude = [
  ".*",
  "dist",
  "docs",
  "docsbuild",
  "htmlcov",
  "scripts",
  "tests",
  "*__pycache__*",
  "*.pyc"
]

  [tool.poetry.dependencies]
  python = "^3.9.0"

    [tool.poetry.dependencies.insegel]
    version = "1.2.0"
    optional = true

    [tool.poetry.dependencies.sphinx]
    version = "4.2.0"
    optional = true

    [tool.poetry.dependencies.sphinxcontrib-autoprogram]
    version = "0.1.7"
    optional = true

    [tool.poetry.dependencies.sphinxcontrib-spelling]
    version = "7.2.1"
    optional = true

    [tool.poetry.dependencies.toml]
    version = "0.10.2"
    optional = true

  [tool.poetry.dev-dependencies]
  assertpy = "^1.1"
  bandit = "^1.7.4"
  black = "^22.8"
  codecov = "^2.1.12"
  doc8 = "^0.11.2"
  flake8 = "^5.0.4"
  flake8-docstrings = "^1.6.0"
  isort = "^5.10.1"
  mypy = "^0.971"
  poethepoet = "^0.16.1"
  pytest = "^7.1.3"
  pytest-asyncio = "^0.19.0"
  pytest-cov = "^3.0.0"
  pytest-resource-path = "^1.3.0"
  pytest-mockservers = "^0.6.0"
  pytest-sugar = "^0.9.5"
  time-machine = "^2.8.1"
  types-toml = "^0.10.8"
  yamllint = "^1.27.1"

  [tool.poetry.extras]
  docs = [
  "insegel",
  "sphinx",
  "sphinxcontrib-autoprogram",
  "sphinxcontrib-spelling",
  "toml"
]

[tool.poe.tasks]
test = "poetry run pytest -v"
test_cov = "poetry run pytest -v --cov --cov-report=term"
test_rep = "poetry run pytest -v --cov --cov-report=xml:coverage.xml --junit-xml junit.xml"
test_pub = "poetry publish --build --repository testpypi"
install_all = "poetry install --no-interaction"
install_dev = "poetry install --no-interaction --no-root"
install_docs = "poetry install --no-interaction --no-root -E docs"
build = "poetry build"
lic_check = "deno run --unstable --allow-read https://deno.land/x/license_checker@v3.1.3/main.ts"
lint = [
  "bandit",
  "black",
  "doc8",
  "flake8",
  "isort",
  "mypy",
  "yamllint"
]
bandit = "poetry run bandit -r src/ tests/ docs/ scripts/"
black = "poetry run black --check src/ docs/ scripts/"
black_fix = "poetry run black src/ docs/ scripts/"
doc8 = "poetry run doc8 docs/"
flake8 = "poetry run flake8 src/ tests/ docs/ scripts/"
isort = "poetry run isort --check-only src/ tests/ docs/ scripts/"
isort_fix = "poetry run isort src/ tests/ docs/ scripts/"
mypy = "poetry run mypy src/ tests/ docs/ scripts/"
yamllint = "poetry run yamllint --format colored --strict ."
sphinx_build = "sphinx-build -b singlehtml docs docsbuild"
sphinx_clean_build = "sphinx-build -a -b singlehtml docs docsbuild"
sphinx_linkcheck = "sphinx-build -b linkcheck docs docsbuild"
sphinx_spelling = "sphinx-build -b spelling docs docsbuild"

[build-system]
requires = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"
