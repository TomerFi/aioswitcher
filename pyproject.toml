[tool.poetry]
name = "aioswitcher"
version = "2.0.5"
description = "Switcher Python Integration."
license = "Apache-2.0"
authors = ["Tomer Figenblat <tomer.figenblat@gmail.com>"]
readme = "README.md"
homepage = "https://pypi.org/project/aioswitcher/"
repository = "https://github.com/tomerfi/aioswitcher"
documentation = "https://aioswitcher.tomfi.info"
keywords = ["home", "automation", "switcher", "smart"]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
include = [] # CAHNGELOG, LICENSE, README and pyproject.toml are automatically included
exclude = [
    ".*",
    "dist",
    "docs",
    "docsbuild",
    "htmlcov",
    "scripts",
    "tests",
    "*__pycache__*",
    "*.pyc"
] # poetry.lock is automatically excluded

[tool.poetry.dependencies]
python = "^3.8.0"
insegel = { version = "1.2.0", optional = true }
sphinx = { version = "4.1.2", optional = true }
sphinxcontrib-autoprogram = { version = "0.1.7", optional = true }
sphinxcontrib-spelling = { version = "7.2.1", optional = true }
toml = { version = "0.10.2", optional = true }

[tool.poetry.dev-dependencies]
assertpy = "^1.1"
bandit = "^1.7.0"
black = "^21.8b0"
codecov = "^2.1.12"
doc8 = "^0.9.0"
flake8 = "^3.9.2"
flake8-docstrings = "^1.6.0"
isort = "^5.9.3"
mypy = "^0.910"
poethepoet = "^0.10.0"
pytest = "^6.2.5"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-resource-path = "^1.3.0"
pytest-mockservers = "^0.6.0"
pytest-sugar = "^0.9.4"
time-machine = "^2.4.0"
types-toml = "^0.1.5"
yamllint = "^1.26.3"

[tool.poetry.extras]
docs = [
    "insegel",
    "sphinx",
    "sphinxcontrib-autoprogram",
    "sphinxcontrib-spelling",
    "toml"
]

[tool.poe.tasks]
# testing scripts
test = "poetry run pytest -v"
test_cov = "poetry run pytest -v --cov --cov-report=term"
test_rep = "poetry run pytest -v --cov --cov-report=xml:coverage.xml --junit-xml junit.xml"
test_pub = "poetry publish --build --repository testpypi" # this requires a testpypi repository configured
# installing and building scripts
install_all = "poetry install --no-interaction"
install_dev = "poetry install --no-interaction --no-root"
install_docs = "poetry install --no-interaction --no-root -E docs"
build = "poetry build"
# helper scripts
lic_check = "deno run --unstable --allow-read https://deno.land/x/license_checker@v3.1.3/main.ts" # requires local deno
# linting scripts
lint = ["bandit", "black", "doc8", "flake8", "isort", "mypy", "yamllint"]
bandit = "poetry run bandit -r src/ tests/ docs/ scripts/"
black = "poetry run black --check src/ docs/ scripts/" # tests are not included
black_fix = "poetry run black src/ docs/ scripts/"
doc8 = "poetry run doc8 docs/"
flake8 = "poetry run flake8 src/ tests/ docs/ scripts/"
isort = "poetry run isort --check-only src/ tests/ docs/ scripts/"
isort_fix = "poetry run isort src/ tests/ docs/ scripts/"
mypy = "poetry run mypy src/ tests/ docs/ scripts/"
yamllint = "poetry run yamllint --format colored --strict ."
# documentation building scripts
sphinx_build = "sphinx-build -b singlehtml docs docsbuild"
sphinx_clean_build = "sphinx-build -a -b singlehtml docs docsbuild"
sphinx_linkcheck = "sphinx-build -b linkcheck docs docsbuild"
sphinx_spelling = "sphinx-build -b spelling docs docsbuild"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
