[tool.poetry]
name = "aioswitcher"
version = "3.4.3.dev"
description = "Switcher Python Integration."
license = "Apache-2.0"
authors = [ "Tomer Figenblat <tomer@tomfi.info>" ]
maintainers = [ "Shay Levy" ]
readme = "README.md"
homepage = "https://pypi.org/project/aioswitcher/"
repository = "https://github.com/tomerfi/aioswitcher"
documentation = "https://aioswitcher.tomfi.info"
keywords = [ "home", "automation", "switcher", "smart" ]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Home Automation",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed"
]
include = [ "py.typed" ]
exclude = [ ]

  [tool.poetry.dependencies]
  python = "^3.9.0"
  types-requests = "^2.31.0.6"

[tool.poetry.group.dev.dependencies]
assertpy = "^1.1"
black = ">=22.8,<24.0"
flake8 = ">=5.0.4,<7.0.0"
flake8-docstrings = "^1.6.0"
Flake8-pyproject = "^1.1.0.post0"
isort = "^5.10.1"
mypy = ">=0.971,<1.5"
poethepoet = ">=0.16.1,<0.22.0"
pytest = "^7.1.2"
pytest-asyncio = ">=0.19,<0.22"
pytest-cov = ">=3,<5"
pytest-resource-path = "^1.3.0"
pytest-mockservers = "^0.6.0"
pytest-sugar = "^0.9.4"
time-machine = "^2.7.0"
yamllint = "^1.26.3"
pycryptodome = ">=3.18.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.3.0"
mkdocs-git-revision-date-plugin = "^0.3.2"
mkdocs-material = ">=8.3.8,<10.0.0"
mkdocstrings = ">=0.19,<0.23"
mkdocstrings-python = ">=0.7.1,<1.4.0"
poethepoet = ">=0.16.1,<0.22.0"

[tool.poe.tasks]
install = "poetry install --no-interaction"
test = "poetry run pytest -v"
test_cov = "poetry run pytest -v --cov --cov-report=term"
test_rep = "poetry run pytest -v --cov --cov-report=xml:coverage.xml --junit-xml junit.xml"
test_pub = "poetry publish --build --repository testpypi"
lic_check = "deno run --unstable --allow-read https://deno.land/x/license_checker@v3.1.3/main.ts"
lint = [ "black", "flake8", "isort", "mypy", "yamllint" ]
black = "poetry run black --check src/ docs/ scripts/"
black_fix = "poetry run black src/ docs/ scripts/"
flake8 = "poetry run flake8 src/ tests/ docs/ scripts/"
isort = "poetry run isort --check-only src/ tests/ docs/ scripts/"
isort_fix = "poetry run isort src/ tests/ docs/ scripts/"
mypy = "poetry run mypy src/ scripts/"
yamllint = "poetry run yamllint --format colored --strict ."
docs_build = "poetry run mkdocs build"
docs_serve = "poetry run mkdocs serve"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
show_none_errors = true
strict_concatenate = true
strict_equality = true
strict = true

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
per-file-ignores = "tests/*.py:E501,D103"
count = true
statistics = true

[tool.coverage.run]
source = [ "aioswitcher" ]

[tool.coverage.report]
fail_under = 85
precision = 2
skip_covered = true

[build-system]
requires = [ "poetry-core>=1.2.0" ]
build-backend = "poetry.core.masonry.api"
