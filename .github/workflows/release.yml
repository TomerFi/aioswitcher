# yamllint disable rule:line-length
---
name: Release

on:
  workflow_dispatch:

env:
  MAIN_PY_VER: 3.9

jobs:
  user_info:
    runs-on: ubuntu-latest
    environment: deployment
    name: Collect user info
    outputs:
      pypi_token: ${{ steps.set_info.outputs.pypi_token }}
      gh_release_pat: ${{ steps.set_info.outputs.gh_release_pat }}
      twitter_api_key: ${{ steps.set_info.outputs.twitter_api_key }}
      twitter_api_secret_key: ${{ steps.set_info.outputs.twitter_api_secret_key }}
      twitter_access_token: ${{ steps.set_info.outputs.twitter_access_token }}
      twitter_access_token_secret: ${{ steps.set_info.outputs.twitter_access_token_secret }}
    steps:
      - name: Set user info
        id: set_info
        run: |
          pypi_token=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_PYPI_TOKEN }}; \
                      elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_PYPI_TOKEN }}; fi)
          gh_release_pat=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_GH_RELEASE_PAT }}; \
                          elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_GH_RELEASE_PAT }}; fi)
          twitter_api_key=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_TWITTER_API_KEY }}; \
                            elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_TWITTER_API_KEY }}; fi)
          twitter_api_secret_key=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_TWITTER_API_SECRET_KEY }}; \
                                  elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_TWITTER_API_SECRET_KEY }}; fi)
          twitter_access_token=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_TWITTER_ACCESS_TOKEN }}; \
                                elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_TWITTER_ACCESS_TOKEN }}; fi)
          twitter_access_token_secret=$(if [ "${{ github.actor }}" = "TomerFi" ]; then echo ${{ secrets.TOMERFI_TWITTER_ACCESS_TOKEN_SECRET }}; \
                                        elif [ "${{ github.actor }}" = "thecode" ]; then echo ${{ secrets.THECODE_TWITTER_ACCESS_TOKEN_SECRET }}; fi)
          echo "::set-output name=pypi_token::$pypi_token"
          echo "::set-output name=gh_release_pat::$gh_release_pat"
          echo "::set-output name=twitter_api_key::$twitter_api_key"
          echo "::set-output name=twitter_api_secret_key::$twitter_api_secret_key"
          echo "::set-output name=twitter_access_token::$twitter_access_token"
          echo "::set-output name=twitter_access_token_secret::$twitter_access_token_secret"

      - name: Validate user info
        if: |
          ${{ steps.set_info.outputs.pypi_token == '' ||
              steps.set_info.outputs.gh_release_pat == '' ||
              steps.set_info.outputs.twitter_api_key == '' ||
              steps.set_info.outputs.twitter_api_secret_key == '' ||
              steps.set_info.outputs.twitter_access_token == '' ||
              steps.set_info.outputs.twitter_access_token_secret == ''}}
        uses: actions/github-script@v4.1.0
        with:
          script: core.setFailed('Missing user info')

  publish:
    runs-on: ubuntu-latest
    needs: user_info
    name: Build and publish to PyPi
    outputs:
      new_version: ${{ steps.version.outputs.new_version  }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.MAIN_PY_VER }}

      - name: Cache pip repository
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ env.MAIN_PY_VER }}

      - name: Prepare python environment
        run: |
          pip install -rrequirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache poetry virtual environment
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ env.MAIN_PY_VER }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 16

      - name: Install global node modules
        run: >
          npm i -g
          conventional-changelog-cli
          conventional-changelog-conventionalcommits
          conventional-recommended-bump
          git-semver-tags

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set version info
        id: version
        run: |
          new_version=$(bash deploy/get_next_bump.sh)
          next_iteration=$(bash deploy/get_next_dev_iteration.sh --tag $new_version)
          echo "::set-output name=new_version::$new_version"
          echo "::set-output name=next_iteration::$next_iteration"

      - name: Set new project version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: pyproject.toml
          key: tool.poetry.version
          value: ${{ steps.version.outputs.new_version }}

      - name: Update poetry lock file
        run: poetry update

      - name: Commit, tag, and push
        run: |
          git add pyproject.toml poetry.lock
          git commit -m "build: bump version to ${{ steps.version.outputs.new_version }}"
          git push
          git tag ${{ steps.version.outputs.new_version }} -m ${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.version.outputs.new_version }}

      - name: Verify documenation site build
        run: |
          poe install_docs
          poe sphinx_linkcheck
          poe sphinx_build
          poe sphinx_spelling

      - name: Publish build to PyPi
        run: poetry publish --build -u __token__ -p ${{ needs.user_info.outputs.pypi_token }}

      - name: Create CHANGELOG.md for sourcing the release notes
        run: bash deploy/create_changelog.sh --tag ${{ steps.version.outputs.new_version }}

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: changelog
          if-no-files-found: error
          path: CHANGELOG.md

      - name: Set development project version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: pyproject.toml
          key: tool.poetry.version
          value: ${{ steps.version.outputs.next_iteration }}

      - name: Update poetry lock file
        run: poetry update

      - name: Commit and push
        run: |
          git add pyproject.toml poetry.lock
          git commit -m "build: bump version to ${{ steps.version.outputs.next_iteration }}"
          git push

  release:
    runs-on: ubuntu-latest
    name: Release to GitHub
    needs: [user_info, publish]
    outputs:
      html_url: ${{ steps.gh_release.outputs.html_url }}
    steps:
      - name: Download changelog artifact
        uses: actions/download-artifact@v2
        with:
          name: changelog

      - name: Release to GitHub
        id: gh_release
        uses: ncipollo/release-action@v1.8.8
        with:
          bodyFile: CHANGELOG.md
          tag: ${{ needs.publish.outputs.new_version }}
          token: ${{ needs.user_info.outputs.gh_release_pat }}

  announce:
    runs-on: ubuntu-latest
    name: Announce new release
    needs: [user_info, publish, release]
    steps:
      - name: Tweet new release
        uses: lazy-actions/tweet-action@1.0.1
        with:
          oauth_consumer_key: ${{ needs.user_info.outputs.twitter_api_key }}
          oauth_consumer_secret: ${{ needs.user_info.outputs.twitter_api_secret_key }}
          oauth_token: ${{ needs.user_info.outputs.twitter_access_token }}
          oauth_token_secret: ${{ needs.user_info.outputs.twitter_access_token_secret }}
          message: |
            ðŸš€ðŸŽ‰ Aioswitcher ${{ needs.publish.outputs.new_version  }} has been released! ðŸŽ‰ðŸš€
            ${{ needs.release.outputs.html_url }}

            #aioswitcher
