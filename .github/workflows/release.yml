---
name: Release

on:
  push:
    tags:
      - '[0-9].[0-9].[0-9]*'

env:
  MAIN_PY_VER: 3.9

jobs:
  release:
    if: github.actor == 'TomerFi'
    runs-on: ubuntu-latest
    name: Build release and publish to PyPi
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.MAIN_PY_VER }}

      - name: Cache pip repository
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ env.MAIN_PY_VER }}

      - name: Prepare python environment
        run: |
          pip install -rrequirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache poetry virtual environment
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ env.MAIN_PY_VER }}

      - name: Verify documenation site
        run: |
          poe install_docs
          poe sphinx_linkcheck
          poe sphinx_build
          poe sphinx_spelling

      - name: Build distribution assets
        run: poe build

      - name: Create release
        id: create_release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            dist/*.tar.gz
            dist/*.whl

      - name: Publish python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Dispatch release event
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          token: ${{ secrets.EVENT_DISPATCH_PAT }}
          event-type: aioswitcher-released

      - name: Tweet new release
        uses: lazy-actions/tweet-action@1.0.1
        env:
          RELEASE_TAG: ${{ steps.create_release.outputs.automatic_releases_tag }}
        with:
          oauth_consumer_key: ${{ secrets.TWITTER_API_KEY }}
          oauth_consumer_secret: ${{ secrets.TWITTER_API_SECRET_KEY }}
          oauth_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          oauth_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          message: |
            ðŸš€ðŸŽ‰ Aioswitcher ${{ env.RELEASE_TAG }} has been released! ðŸŽ‰ðŸš€
            ${{ github.event.repository.html_url }}/releases/tag/${{ env.RELEASE_TAG }}

            #aioswitcher
